author = $STR_MISSION_AUTHOR;
onLoadName = $STR_MISSION_TITLE;
briefingName = $STR_MISSION_TITLE;
onLoadMission = $STR_MISSION_DESCRIPTION;
overviewText = $STR_MISSION_DESCRIPTION;
overviewPicture = "res\liberation.paa";
loadScreen = "res\liberation.paa";
onLoadIntro = "Welcome on the Liberaton RX planet.";

respawn = 3;
respawndelay = 15;
respawnButton = 1;
respawnOnStart = 0;
//reviveMode = 0; 
disabledAI = true;
enableDebugConsole = 1;
allowFunctionsLog = 0;
//forceRotorLibSimulation = 2;

saving = 0;
briefing = 0;
joinUnassigned = 0;
LARs_calculateSideGear = 1;
cba_settings_hasSettingsFile = 1;

class CfgFunctions {
	#include "addons\LARs\blacklistArsenal\functions\blacklistArsenal.fncs"
	#include "addons\GRAD\cfgFunctions.hpp"
	#include "addons\SDB_DALE\CfgFunctions.hpp"
	#include "CfgFunctions.hpp"
};

class cfgSounds {
 	class parasound {
 		name = "parasound";
 		sound[] = {"res\c130.ogg", 1, 1};
 		titles[] = {};
 	};
	#include "addons\GRAD\cfgSounds.hpp"
};

class Header {
	gameType = CTI;
	minPlayers = 1;
	maxPlayers = 28;
};

class CfgDebriefing {
	class End1
	{
		title =	$STR_SORRY;
		subtitle = "";
		description = $STR_COMMANDER_NOT_AUTHORIZED;
		pictureBackground = "";
	};
};

#include "GREUH\UI\GREUH_interface.hpp"
#include "ui\liberation_interface.hpp"
#include "ui\liberation_notifications.hpp"
#include "ui\mission_params.hpp"
#include "R3F_LOG\desc_include.h"
#include "addons\MGR\MagRepack_Config.hpp"
#include "addons\VIRT\virtual_garage.hpp"
#include "addons\SHOP\traders_shop.hpp"
#include "addons\SELL\sell_shop.hpp"
#include "addons\SDB_DALE\RscLoadout.hpp"
#include "addons\JKB\JKB_dialog.hpp"
#include "addons\VAM\defines.hpp"
#include "addons\VAM\VAM_GUI_controls.hpp"
#include "addons\VAM\VAM_GUI_classes.hpp"

/*
    ----- Corpse & Wreck Management -----
*/

// Sets the mode for corpse removal manager.
// 0 = None                 - None of the units are managed by the manager
// 1 = All                  - All units are managed by the manager
// 2 = None_But_Respawned   - Only units that can respawn are managed by the manager
// 3 = All_But_Respawned    - All units are managed by the manager with exception of respawned (opposite to mode 2)
corpseManagerMode = 1;

// Corpse limit before which (<=) corpseRemovalMaxTime applies and after which (>) corpseRemovalMinTime applies.
corpseLimit = 15;

// Remove all bodies that have been dead longer than corpseRemovalMinTime when corpseLimit is reached.
corpseRemovalMinTime = 75;

// Maximum time a corpse can remain on the ground if total number of corpses is equal or under corpseLimit.
corpseRemovalMaxTime = 3600;

// Sets the mode for wreck removal manager.
// 0 = None                 - None of the vehicles are managed by the manager
// 1 = All                  - All vehicles are managed by the manager
// 2 = None_But_Respawned   - Only vehicles that can respawn are managed by the manager
// 3 = All_But_Respawned    - All vehicles are managed by the manager with exception of respawned (opposite to mode 2)
wreckManagerMode = 1;

// Vehicle wreck limit before which (<=) wreckRemovalMaxTime applies and after which (>) wreckRemovalMinTime applies.
wreckLimit = 5;

// Remove all wrecks that have existed longer than wreckRemovalMinTime when wreckLimit is breached.
//wreckRemovalMinTime = 1200;

// Maximum time a wreck can remain on the ground if total number of wrecks is equal or under wreckLimit.
//wreckRemovalMaxTime = 7200;

// The minimum distance between corpse or wreck and nearest player before the corpse or wreck is allowed to be removed by the garbage collector.
minPlayerDistance = 25;
